{
	"name": "GeoPoseSandbox",
	"classes": {
		"Collection": {
			"name": "Collection",
			"comment": { "description": "Defines a collection of data items." },
			"type": { "name": "Item" },
			"file": "data/Collection.ts",
			"members": {
				"_types": {
					"name": "_types",
					"comment": { "description": "The types of items in the data collection." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "Type" }
				},
				"_items": {
					"name": "_items",
					"comment": { "description": "The items of the data collection." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "ItemType" }
				},
				"_count": {
					"name": "_count",
					"comment": { "description": "The number of items of the data collection." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"_owner": {
					"name": "_owner",
					"comment": { "description": "The owner the data collection." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "Item" }
				},
				"count": {
					"name": "count",
					"comment": { "description": "The number of items of the data collection." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "number" }
				},
				"owner": {
					"name": "owner",
					"comment": { "description": "The owner of the data collection." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Item" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Collection instance.",
						"params": { "types": "The types of items in the collection.", "owner": "The owner the data collection." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "types",
							"type": { "name": "Type" }
						},
						{
							"name": "owner",
							"optional": true,
							"type": { "name": "Item" }
						}
					]
				},
				"getByIndex": {
					"name": "getByIndex",
					"comment": {
						"description": "Gets a data item by index.",
						"params": { "index": "The index of the item to get." },
						"return": "The item with the specified index."
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "index",
							"type": { "name": "number" }
						}
					],
					"type": { "name": "ItemType" }
				},
				"getByName": {
					"name": "getByName",
					"comment": {
						"description": "Gets a data item by name.",
						"params": { "index": "The name of the item to get." },
						"return": "The item with the specified name."
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "name",
							"type": { "name": "string" }
						}
					],
					"type": { "name": "ItemType" }
				}
			},
			"imports": [ "Item", "Type" ]
		},
		"List": {
			"name": "List",
			"comment": { "description": "Defines a generic list of data items." },
			"type": {
				"name": "Collection",
				"subtype": { "name": "ItemType" }
			},
			"file": "data/collections/List.ts",
			"members": {
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the List instance.",
						"params": { "types": "The types of items in the collection.", "owner": "The owner the data collection." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "types",
							"type": { "name": "Type" }
						},
						{
							"name": "owner",
							"optional": true,
							"type": { "name": "Item" }
						}
					]
				},
				"add": {
					"name": "add",
					"comment": {
						"description": "Adds a new item to the end of the list.",
						"params": { "item": "The item to add.", "position": "The position where to add the item (by default, at the end). Negative values imply counting from the end of the list." },
						"return": "The added item."
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "item",
							"type": { "name": "ItemType" }
						},
						{
							"name": "position",
							"optional": true,
							"type": { "name": "number" }
						}
					]
				}
			},
			"imports": [ "Collection", "Item", "Type" ]
		},
		"Item": {
			"name": "Item",
			"comment": { "description": "Defines a data item (often called a datum) in a graph structure . Provides a way to store information in a complex way." },
			"type": null,
			"file": "data/Item.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The type of the data item." },
					"modifiers": [ "public" ],
					"kind": "field"
				},
				"_type": {
					"name": "_type",
					"comment": { "description": "The type of the data item." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "Type" }
				},
				"_name": {
					"name": "_name",
					"comment": { "description": "The name of the data item." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "string" }
				},
				"_parent": {
					"name": "_parent",
					"comment": { "description": "The parent data item." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "Item" }
				},
				"_children": {
					"name": "_children",
					"comment": { "description": "The child data items." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "Item" }
					}
				},
				"_updated": {
					"name": "_updated",
					"comment": { "description": "The update state of the item." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "boolean" }
				},
				"_updateTime": {
					"name": "_updateTime",
					"comment": { "description": "The last update time." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"_relationships": {
					"name": "_relationships",
					"comment": { "description": "The additional relationships of the data item." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": {
						"name": "Record",
						"subtype": { "name": "string" }
					}
				},
				"_onModified": {
					"name": "_onModified",
					"comment": { "description": "A global event triggered when a data item is modified." },
					"modifiers": [ "static", "protected" ],
					"kind": "field",
					"type": { "name": "Event" },
					"parameters": [
						{ "name": "\"modified\"" }
					]
				},
				"_onPreUpdate": {
					"name": "_onPreUpdate",
					"comment": { "description": "A global event triggered before a data item is updated." },
					"modifiers": [ "static", "protected" ],
					"kind": "field",
					"type": { "name": "Event" },
					"parameters": [
						{ "name": "\"pre-update\"" }
					]
				},
				"_onPostUpdate": {
					"name": "_onPostUpdate",
					"comment": { "description": "A global event triggered when a data item is updated." },
					"modifiers": [ "static", "protected" ],
					"kind": "field",
					"type": { "name": "Event" },
					"parameters": [
						{ "name": "\"post-update\"" }
					]
				},
				"name": {
					"name": "name",
					"comment": { "description": "The name of the data item." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "string" }
				},
				"parent": {
					"name": "parent",
					"comment": { "description": "The parent of the data item." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Item" }
				},
				"children": {
					"name": "children",
					"comment": { "description": "The child data items." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "Collection",
						"subtype": { "name": "Item" }
					}
				},
				"relationships": {
					"name": "relationships",
					"comment": { "description": "The additional relationships of the data item." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "Record",
						"subtype": { "name": "string" }
					}
				},
				"updated": {
					"name": "updated",
					"comment": { "description": "The update state of the item." },
					"modifiers": [ "set", "public" ],
					"kind": "accessor",
					"parameters": [
						{
							"name": "value",
							"type": { "name": "boolean" }
						}
					]
				},
				"updateTime": {
					"name": "updateTime",
					"comment": { "description": "The last update time." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "number" }
				},
				"onModified": {
					"name": "onModified",
					"comment": { "description": "A global event triggered when a item is modified." },
					"modifiers": [ "get", "static", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Event" }
				},
				"onPreUpdate": {
					"name": "onPreUpdate",
					"comment": { "description": "An event triggered before a item is updated." },
					"modifiers": [ "get", "static", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Event" }
				},
				"onPostUpdate": {
					"name": "onPostUpdate",
					"comment": { "description": "An event triggered after a item is updated." },
					"modifiers": [ "get", "static", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Event" }
				},
				"onCreation": {
					"name": "onCreation",
					"comment": { "description": "A global event triggered when a data item is created." },
					"modifiers": [ "static", "public" ],
					"kind": "field",
					"type": { "name": "Event" },
					"parameters": [
						{ "name": "\"creation\"" }
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Item class.",
						"params": { "name": "The name of the data item.", "parent": "The parent data item." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						}
					]
				},
				"update": {
					"name": "update",
					"comment": {
						"description": "Updates the Item instance.",
						"params": { "deltaTime": "The update time.", "forced": "Indicates whether the update is forced or not." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "deltaTime",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "forced",
							"type": { "name": "boolean" },
							"defaultValue": "false"
						}
					]
				},
				"serialize": {
					"name": "serialize",
					"comment": {
						"description": "Serializes the Item instance.",
						"params": { "format": "The serialization format." },
						"return": "The serialized data."
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "format",
							"optional": true,
							"type": { "name": "SerializationFormat" }
						}
					],
					"type": { "name": "object" }
				},
				"deserialize": {
					"name": "deserialize",
					"comment": {
						"description": "Deserializes the Item instance.",
						"params": { "data": "The data to deserialize." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "data",
							"type": { "name": "object" },
							"defaultValue": "{"
						}
					]
				}
			},
			"imports": [ "Type", "Event", "Collection", "Relationship", "List", "Serialization" ]
		},
		"Color": {
			"name": "Color",
			"comment": { "description": "Defines an RGBA color." },
			"type": { "name": "Complex" },
			"file": "data/items/complex/Color.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Color class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"color\"" },
						{ "name": "Color" },
						{ "name": "Complex" }
					]
				},
				"_r": {
					"name": "_r",
					"comment": { "description": "The red component of the color." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_g": {
					"name": "_g",
					"comment": { "description": "The green component of the color." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_b": {
					"name": "_b",
					"comment": { "description": "The blue component of the color." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_a": {
					"name": "_a",
					"comment": { "description": "The alpha component of the color." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"r": {
					"name": "r",
					"comment": { "description": "The red component of the color." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"g": {
					"name": "g",
					"comment": { "description": "The green component of the color." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"b": {
					"name": "b",
					"comment": { "description": "The blue component of the color." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"a": {
					"name": "a",
					"comment": { "description": "The alpha component of the color." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Color class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"getValues": {
					"name": "getValues",
					"comment": { "description": "Gets the values of the Color instance.", "return": "An object with the values of the Color instance." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [],
					"type": { "name": "object" }
				},
				"setValues": {
					"name": "setValues",
					"comment": {
						"description": "Sets the values of the Color instance.",
						"params": { "r": "The value of the Red component.", "g": "The value of the Green component.", "b": "The value of the Blue component.", "a": "The value of the Alpha component." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "r",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "g",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "b",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "a",
							"type": { "name": "number" },
							"defaultValue": "1"
						}
					]
				},
				"toString": {
					"name": "toString",
					"comment": { "description": "Obtains the string representation of the Color instance.", "return": "The string representation of the Color instance." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [],
					"type": { "name": "string" }
				}
			},
			"imports": [ "Item", "Type", "Complex", "Number" ]
		},
		"Euler": {
			"name": "Euler",
			"comment": { "description": "Defines the Euler orientation.", "see": "https://en.wikipedia.org/wiki/Euler_angles" },
			"type": { "name": "Complex" },
			"file": "data/items/complex/Euler.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Euler class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"euler\"" },
						{ "name": "Euler" },
						{ "name": "Complex" }
					]
				},
				"_x": {
					"name": "_x",
					"comment": { "description": "The Angle in the X axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Angle" }
				},
				"_y": {
					"name": "_y",
					"comment": { "description": "The Angle in the Y axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Angle" }
				},
				"_z": {
					"name": "_z",
					"comment": { "description": "The Angle in the Z axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Angle" }
				},
				"_order": {
					"name": "_order",
					"comment": { "description": "The order of application of axis rotation." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "String" }
				},
				"x": {
					"name": "x",
					"comment": { "description": "The Angle in the X axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Angle" }
				},
				"y": {
					"name": "y",
					"comment": { "description": "The Angle in the Y axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Angle" }
				},
				"z": {
					"name": "z",
					"comment": { "description": "The Angle in the Z axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Angle" }
				},
				"order": {
					"name": "order",
					"comment": { "description": "The order of application of axis rotation." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "String" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Euler class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"getValues": {
					"name": "getValues",
					"comment": { "description": "Gets the values of the Euler instance.", "return": "An object with the values of the Euler instance." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [],
					"type": { "name": "object" }
				},
				"setValues": {
					"name": "setValues",
					"comment": {
						"description": "Sets the values of the Euler instance.",
						"params": { "x": "The value in the X axis.", "y": "The value in the Y axis.", "z": "The value in the Z axis." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "x",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "y",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "z",
							"type": { "name": "number" },
							"defaultValue": "0"
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Complex", "String", "Angle" ]
		},
		"Quaternion": {
			"name": "Quaternion",
			"comment": { "description": "Defines a four-dimensional complex number to describe rotations." },
			"type": { "name": "Complex" },
			"file": "data/items/complex/Quaternion.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Quaternion class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"quaternion\"" },
						{ "name": "Quaternion" },
						{ "name": "Complex" }
					]
				},
				"_x": {
					"name": "_x",
					"comment": { "description": "The value of the quaternion vector in the X(i) axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_y": {
					"name": "_y",
					"comment": { "description": "The value of the quaternion vector in the Y(j) axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_z": {
					"name": "_z",
					"comment": { "description": "The value of the quaternion vector in the Z(k) axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_w": {
					"name": "_w",
					"comment": { "description": "The rotation half-angle around the quaternion vector." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"x": {
					"name": "x",
					"comment": { "description": "The value of the quaternion vector in the X(i) axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"y": {
					"name": "y",
					"comment": { "description": "The value of the quaternion vector in the Y(j) axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"z": {
					"name": "z",
					"comment": { "description": "The value of the quaternion vector in the Z(k) axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"w": {
					"name": "w",
					"comment": { "description": "The rotation half-angle around the quaternion vector." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Quaternion class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"getValues": {
					"name": "getValues",
					"comment": { "description": "Gets the values of the Quaternion instance.", "return": "An object with the values of the Quaternion instance." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [],
					"type": { "name": "object" }
				},
				"setValues": {
					"name": "setValues",
					"comment": {
						"description": "Sets the values of the Quaternion instance.",
						"params": { "x": "The value of the quaternion vector in the X(i) axis.", "y": "The value of the quaternion vector in the Y(j) axis.", "z": "The value of the quaternion vector in the Z(k) axis.", "w": "The rotation half-angle around the quaternion vector." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "x",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "y",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "z",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "w",
							"type": { "name": "number" },
							"defaultValue": "1"
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Complex", "Number" ]
		},
		"Vector": {
			"name": "Vector",
			"comment": { "description": "Defines a three-dimensional vector." },
			"type": { "name": "Complex" },
			"file": "data/items/complex/Vector.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Vector class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"vector\"" },
						{ "name": "Vector" },
						{ "name": "Complex" }
					]
				},
				"_x": {
					"name": "_x",
					"comment": { "description": "The vector component in the X axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Distance" }
				},
				"_y": {
					"name": "_y",
					"comment": { "description": "The vector component in the Y axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Distance" }
				},
				"_z": {
					"name": "_z",
					"comment": { "description": "The vector component in the Z axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Distance" }
				},
				"x": {
					"name": "x",
					"comment": { "description": "The vector component in the X axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Distance" }
				},
				"y": {
					"name": "y",
					"comment": { "description": "The vector component in the Y axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Distance" }
				},
				"z": {
					"name": "z",
					"comment": { "description": "The vector component in the Z axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Distance" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Vector3 class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"getValues": {
					"name": "getValues",
					"comment": { "description": "Gets the values of the Vector instance.", "return": "An object with the values of the Vector instance." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [],
					"type": { "name": "object" }
				},
				"setValues": {
					"name": "setValues",
					"comment": {
						"description": "Sets the values of the Vector instance.",
						"params": { "x": "The vector component in the X axis.", "y": "The vector component in the Y axis.", "z": "The vector component in the Z axis." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "x",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "y",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "z",
							"type": { "name": "number" },
							"defaultValue": "0"
						}
					]
				},
				"toString": {
					"name": "toString",
					"comment": { "description": "Obtains the string representation of the Vector instance.", "return": "The string representation of the Vector instance." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [],
					"type": { "name": "string" }
				}
			},
			"imports": [ "Item", "Type", "Complex", "Distance" ]
		},
		"Complex": {
			"name": "Complex",
			"comment": { "description": "Defines a complex data item." },
			"type": { "name": "Item" },
			"file": "data/items/Complex.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Complex class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"complex\"" },
						{ "name": "Complex" },
						{ "name": "Item" }
					]
				},
				"_components": {
					"name": "_components",
					"comment": { "description": "The list of components of the complex data item." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"isDefault": {
					"name": "isDefault",
					"comment": { "description": "Indicates whether all the the values are the default or not." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "boolean" }
				},
				"isUndefined": {
					"name": "isUndefined",
					"comment": { "description": "Indicates whether the value is undefined or not." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "boolean" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the complex class.",
						"params": { "name": "The name of the data item.", "parent": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Number" ]
		},
		"Measure": {
			"name": "Measure",
			"comment": { "description": "Defines a numeric Measure item." },
			"type": { "name": "Number" },
			"file": "data/items/Measure.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Measure class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"measure\"" },
						{ "name": "Measure" },
						{ "name": "Number" }
					]
				},
				"_units": {
					"name": "_units",
					"comment": { "description": "The units of the measure." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "MeasurementUnit" }
				},
				"_unitIndex": {
					"name": "_unitIndex",
					"comment": { "description": "The units of the measure." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"unit": {
					"name": "unit",
					"comment": { "description": "The current unit of the measure." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "MeasurementUnit" }
				},
				"units": {
					"name": "units",
					"comment": { "description": "The units of the measure." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "MeasurementUnit" }
				},
				"unitIndex": {
					"name": "unitIndex",
					"comment": { "description": "The value of the measure in the selected unit." },
					"modifiers": [ "set", "public" ],
					"kind": "accessor",
					"parameters": [
						{
							"name": "u",
							"type": { "name": "number" }
						}
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Type class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Number" ]
		},
		"MeasurementUnit": {
			"name": "MeasurementUnit",
			"comment": { "description": "Defines a Measurement Unit." },
			"type": null,
			"file": "data/items/Measure.ts",
			"members": {
				"_id": {
					"name": "_id",
					"comment": { "description": "The name of the Measurement Unit." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "string" }
				},
				"_abbrevs": {
					"name": "_abbrevs",
					"comment": { "description": "The list of abbreviations of the Measurement Unit." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "string" }
				},
				"_factor": {
					"name": "_factor",
					"comment": { "description": "The relative conversion factor of the Measurement Unit." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"_default": {
					"name": "_default",
					"comment": { "description": "The default value of the Measurement Unit." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"_min": {
					"name": "_min",
					"comment": { "description": "The minimum possible value of the Measurement Unit." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"_max": {
					"name": "_max",
					"comment": { "description": "The maximum possible value of the Measurement Unit." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"id": {
					"name": "id",
					"comment": { "description": "The name of the Measurement Unit." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "string" }
				},
				"abbrevs": {
					"name": "abbrevs",
					"comment": { "description": "The list of abbreviations of the Measurement Unit." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "string" }
				},
				"factor": {
					"name": "factor",
					"comment": { "description": "The relative conversion factor of the Measurement Unit." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "number" }
				},
				"undefined": {
					"name": "undefined",
					"comment": { "description": "The default value of the Measurement Unit." },
					"modifiers": [ "public" ],
					"kind": "field"
				},
				"min": {
					"name": "min",
					"comment": { "description": "The minimum possible value of the Measurement Unit." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "number" }
				},
				"max": {
					"name": "max",
					"comment": { "description": "The maximum possible value of the Measurement Unit." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "number" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the MeasurementUnit class.",
						"params": { "id": "The id of the Measurement Unit.", "abbrevs": "The abbreviations of the Measurement Unit.", "factor": "The relative conversion factor of the Measurement Unit.", "default": "The default value of the Measurement Unit.", "min": "The minimum possible value of the Measurement Unit.", "max": "The maximum possible value of the Measurement Unit." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "id",
							"type": { "name": "string" }
						},
						{
							"name": "abbrevs",
							"type": { "name": "string" }
						},
						{
							"name": "factor",
							"type": { "name": "number" },
							"defaultValue": "1"
						},
						{
							"name": "defaultValue",
							"optional": true,
							"type": { "name": "number" }
						},
						{
							"name": "min",
							"optional": true,
							"type": { "name": "number" }
						},
						{
							"name": "max",
							"optional": true,
							"type": { "name": "number" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Number" ]
		},
		"Angle": {
			"name": "Angle",
			"comment": { "description": "Defines a angular measurement." },
			"type": { "name": "Measure" },
			"file": "data/items/measures/Angle.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Angle class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"angle\"" },
						{ "name": "Angle" },
						{ "name": "Measure" }
					]
				},
				"units": {
					"name": "units",
					"comment": { "description": "The measurement units associated to the Angle class." },
					"modifiers": [ "static", "public" ],
					"kind": "field",
					"type": { "name": "MeasurementUnit" },
					"parameters": [
						{ "name": "\"degrees\"" },
						{ "name": "[" },
						{ "name": "\"d\"" },
						{ "name": "\"º\"" },
						{ "name": "1" }
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Angle class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Measure" ]
		},
		"Distance": {
			"name": "Distance",
			"comment": { "description": "Defines a length measurement." },
			"type": { "name": "Measure" },
			"file": "data/items/measures/Distance.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Distance class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"distance\"" },
						{ "name": "Distance" },
						{ "name": "Measure" }
					]
				},
				"units": {
					"name": "units",
					"comment": { "description": "The measurement units associated to the Distance class." },
					"modifiers": [ "static", "public" ],
					"kind": "field",
					"type": { "name": "MeasurementUnit" },
					"parameters": [
						{ "name": "\"meters\"" },
						{ "name": "[" },
						{ "name": "\"ms\"" },
						{ "name": "1" }
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Distance class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Measure" ]
		},
		"Size": {
			"name": "Size",
			"comment": { "description": "Defines a dimensional measurement." },
			"type": { "name": "Measure" },
			"file": "data/items/measures/Size.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Size class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"size\"" },
						{ "name": "Size" },
						{ "name": "Measure" }
					]
				},
				"units": {
					"name": "units",
					"comment": { "description": "The measurement units associated to the Size class." },
					"modifiers": [ "static", "public" ],
					"kind": "field",
					"type": { "name": "MeasurementUnit" },
					"parameters": [
						{ "name": "\"meters\"" },
						{ "name": "[" },
						{ "name": "\"ms\"" },
						{ "name": "1" }
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Size class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Measure" ]
		},
		"Time": {
			"name": "Time",
			"comment": { "description": "Defines a temporal measurement." },
			"type": { "name": "Measure" },
			"file": "data/items/measures/Time.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the time class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"Time\"" },
						{ "name": "Time" },
						{ "name": "Measure" }
					]
				},
				"units": {
					"name": "units",
					"comment": { "description": "The measurement units associated to the Time class." },
					"modifiers": [ "static", "public" ],
					"kind": "field",
					"type": { "name": "MeasurementUnit" },
					"parameters": [
						{ "name": "\"seconds\"" },
						{ "name": "[" },
						{ "name": "\"sec\"" },
						{ "name": "1" }
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Time class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Measure" ]
		},
		"Shape": {
			"name": "Shape",
			"comment": { "description": "Defines a three dimensional shape." },
			"type": { "name": "Item" },
			"file": "data/items/Shape.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Shape class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"shape\"" },
						{ "name": "Shape" },
						{ "name": "Item" }
					]
				},
				"_shaded": {
					"name": "_shaded",
					"comment": { "description": "Indicates if the Shape should be shaded or not." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "String" }
				},
				"_color": {
					"name": "_color",
					"comment": { "description": "The color of the Shape." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "String" }
				},
				"_texture": {
					"name": "_texture",
					"comment": { "description": "The diffuse texture of the Shape." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "String" }
				},
				"_emissive": {
					"name": "_emissive",
					"comment": { "description": "The emissive texture of the Shape." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "String" }
				},
				"shaded": {
					"name": "shaded",
					"comment": { "description": "Indicates if the Shape should be shaded or not." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "String" }
				},
				"color": {
					"name": "color",
					"comment": { "description": "The color of the Shape." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "String" }
				},
				"texture": {
					"name": "texture",
					"comment": { "description": "The diffuse texture of the Shape." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "String" }
				},
				"emissive": {
					"name": "emissive",
					"comment": { "description": "The emissive texture of the Shape." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "String" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes the Shape instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "String" ]
		},
		"Box": {
			"name": "Box",
			"comment": { "description": "Defines a three-dimensional box Shape (global)." },
			"type": { "name": "Shape" },
			"file": "data/items/shapes/Box.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Box class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"box\"" },
						{ "name": "Box" },
						{ "name": "Shape" }
					]
				},
				"_width": {
					"name": "_width",
					"comment": { "description": "The size of the box in the X axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Size" }
				},
				"_height": {
					"name": "_height",
					"comment": { "description": "The size of the box in the Y axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Size" }
				},
				"_depth": {
					"name": "_depth",
					"comment": { "description": "The size of the box in the Z axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Size" }
				},
				"width": {
					"name": "width",
					"comment": { "description": "The size of the box the X axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Size" }
				},
				"height": {
					"name": "height",
					"comment": { "description": "The size of the box in the Y axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Size" }
				},
				"depth": {
					"name": "depth",
					"comment": { "description": "The size of the box the Z axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Size" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes the Box instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Shape", "Size" ]
		},
		"Ellipsoid": {
			"name": "Ellipsoid",
			"comment": { "description": "Defines a three-dimensional ellipsoid shape." },
			"type": { "name": "Shape" },
			"file": "data/items/shapes/Ellipsoid.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Ellipsoid class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"ellipsoid\"" },
						{ "name": "Ellipsoid" },
						{ "name": "Shape" }
					]
				},
				"_radiusX": {
					"name": "_radiusX",
					"comment": { "description": "The radius in the X axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Size" }
				},
				"_radiusY": {
					"name": "_radiusY",
					"comment": { "description": "The radius in the Y axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Size" }
				},
				"_radiusZ": {
					"name": "_radiusZ",
					"comment": { "description": "The radius in the Z axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Size" }
				},
				"radiusX": {
					"name": "radiusX",
					"comment": { "description": "The radius in the X axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Size" }
				},
				"radiusY": {
					"name": "radiusY",
					"comment": { "description": "The radius in the Y axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Size" }
				},
				"radiusZ": {
					"name": "radiusZ",
					"comment": { "description": "The radius in the Z axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Size" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes the Ellipsoid instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Shape", "Size" ]
		},
		"Sphere": {
			"name": "Sphere",
			"comment": { "description": "Defines a three-dimensional spherical Shape." },
			"type": { "name": "Shape" },
			"file": "data/items/shapes/Sphere.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Sphere class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"sphere\"" },
						{ "name": "Sphere" },
						{ "name": "Shape" }
					]
				},
				"_radius": {
					"name": "_radius",
					"comment": { "description": "The Size of the radius in all axes." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Size" }
				},
				"radius": {
					"name": "radius",
					"comment": { "description": "The Size of the radius in all axes." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Size" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes the Sphere instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Shape", "Size" ]
		},
		"Boolean": {
			"name": "Boolean",
			"comment": { "description": "Defines a boolean data item." },
			"type": {
				"name": "Simple",
				"subtype": { "name": "boolean" }
			},
			"file": "data/items/simple/Boolean.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Boolean class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"boolean\"" },
						{ "name": "Boolean" },
						{ "name": "Simple" }
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Boolean class.",
						"params": { "name": "The name of the data type.", "parent": "The parent data type.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"serialize": {
					"name": "serialize",
					"comment": { "description": "Serializes the Boolean instance.", "return": "The serialized data." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [],
					"type": { "name": "any" }
				},
				"deserialize": {
					"name": "deserialize",
					"comment": {
						"description": "Deserializes the Boolean instance.",
						"params": { "data": "The data to deserialize." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "data",
							"type": { "name": "any" }
						}
					]
				},
				"toString": {
					"name": "toString",
					"comment": { "description": "Obtains the string representation of the Boolean instance.", "return": "The string representation of the Boolean instance." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [],
					"type": { "name": "string" }
				},
				"valueOf": {
					"name": "valueOf",
					"comment": { "description": "Obtains the primitive value of the Boolean instance.", "return": "The primitive value of the Boolean instance." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [],
					"type": { "name": "boolean" }
				}
			},
			"imports": [ "Item", "Type", "Simple" ]
		},
		"Number": {
			"name": "Number",
			"comment": { "description": "Defines a Numeric data item." },
			"type": {
				"name": "Simple",
				"subtype": { "name": "number" }
			},
			"file": "data/items/simple/Number.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Number class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"number\"" },
						{ "name": "Number" },
						{ "name": "Simple" }
					]
				},
				"_min": {
					"name": "_min",
					"comment": { "description": "The minimum possible value of Number." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"_max": {
					"name": "_max",
					"comment": { "description": "The maximum possible value of the Number." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"min": {
					"name": "min",
					"comment": { "description": "The minimum possible value of Number." },
					"modifiers": [ "set", "public" ],
					"kind": "accessor",
					"parameters": [
						{
							"name": "newMin",
							"type": { "name": "number" }
						}
					]
				},
				"max": {
					"name": "max",
					"comment": { "description": "The maximum possible value of the Number." },
					"modifiers": [ "set", "public" ],
					"kind": "accessor",
					"parameters": [
						{
							"name": "newMax",
							"type": { "name": "number" }
						}
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Number class.",
						"params": { "name": "The name of the data item.", "parent": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"serialize": {
					"name": "serialize",
					"comment": { "description": "Serializes the Number instance.", "return": "The serialized data." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [],
					"type": { "name": "any" }
				},
				"deserialize": {
					"name": "deserialize",
					"comment": {
						"description": "Deserializes the Number instance.",
						"params": { "data": "The data to deserialize." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "data",
							"type": { "name": "any" }
						}
					]
				},
				"checkValue": {
					"name": "checkValue",
					"comment": {
						"description": "Checks if the value is valid for this Number instance.",
						"params": { "value": "The value to check." },
						"return": "A boolean value indicating whether the value is valid or not."
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "value",
							"type": { "name": "number" }
						}
					],
					"type": { "name": "boolean" }
				},
				"toString": {
					"name": "toString",
					"comment": { "description": "Obtains the string representation of the Number instance.", "return": "The string representation of the Number instance." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [],
					"type": { "name": "string" }
				}
			},
			"imports": [ "Item", "Type", "Simple" ]
		},
		"String": {
			"name": "String",
			"comment": { "description": "Defines a String data item." },
			"type": {
				"name": "Simple",
				"subtype": { "name": "string" }
			},
			"file": "data/items/simple/String.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the String class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"string\"" },
						{ "name": "String" },
						{ "name": "Simple" }
					]
				},
				"_validRegEx": {
					"name": "_validRegEx",
					"comment": { "description": "The regular expression of the string." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "RegExp" }
				},
				"validRegEx": {
					"name": "validRegEx",
					"comment": { "description": "The regular expression values of the string." },
					"modifiers": [ "set", "public" ],
					"kind": "accessor",
					"parameters": [
						{
							"name": "newValidRegEx",
							"type": { "name": "RegExp" }
						}
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the String class.",
						"params": { "name": "The name of the data item.", "parent": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"deserialize": {
					"name": "deserialize",
					"comment": {
						"description": "Deserializes the String instance.",
						"params": { "data": "The data to deserialize." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "data",
							"type": { "name": "any" }
						}
					]
				},
				"checkValue": {
					"name": "checkValue",
					"comment": {
						"description": "Checks if the value is valid for this String instance.",
						"params": { "value": "The value to check." },
						"return": "A boolean value indicating whether the value is valid or not."
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "value",
							"type": { "name": "string" }
						}
					],
					"type": { "name": "boolean" }
				},
				"toString": {
					"name": "toString",
					"comment": { "description": "Obtains the string representation of the Number instance.", "return": "The string representation of the Number instance." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [],
					"type": { "name": "string" }
				}
			},
			"imports": [ "Item", "Type", "Simple" ]
		},
		"Simple": {
			"name": "Simple",
			"comment": { "description": "Defines a simple data item." },
			"type": { "name": "Item" },
			"file": "data/items/Simple.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Simple class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"simple\"" },
						{ "name": "Simple" },
						{ "name": "Item" }
					]
				},
				"_value": {
					"name": "_value",
					"comment": { "description": "The value of the simple data item." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "BasicType" }
				},
				"_defaultValue": {
					"name": "_defaultValue",
					"comment": { "description": "The default value of the simple data item." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "BasicType" }
				},
				"_validValues": {
					"name": "_validValues",
					"comment": { "description": "The valid values of the simple data item." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "BasicType" }
				},
				"value": {
					"name": "value",
					"comment": { "description": "The current value of the Simple data type." },
					"modifiers": [ "set", "public" ],
					"kind": "accessor",
					"parameters": [
						{
							"name": "newValue",
							"type": { "name": "BasicType" }
						}
					]
				},
				"defaultValue": {
					"name": "defaultValue",
					"comment": { "description": "The default value of the Simple data type." },
					"modifiers": [ "set", "public" ],
					"kind": "accessor",
					"parameters": [
						{
							"name": "newDefaultValue",
							"type": { "name": "BasicType" }
						}
					]
				},
				"validValues": {
					"name": "validValues",
					"comment": { "description": "The valid values of the Simple data type." },
					"modifiers": [ "set", "public" ],
					"kind": "accessor",
					"parameters": [
						{
							"name": "newValidValues",
							"type": { "name": "BasicType" }
						}
					]
				},
				"validValueIndex": {
					"name": "validValueIndex",
					"comment": { "description": "The index of the value in the valid Simple data type." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "number" }
				},
				"isDefault": {
					"name": "isDefault",
					"comment": { "description": "Indicates whether the value is the default or not." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "boolean" }
				},
				"isUndefined": {
					"name": "isUndefined",
					"comment": { "description": "Indicates whether the value is undefined or not." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "boolean" }
				},
				"onModified": {
					"name": "onModified",
					"comment": { "description": "An event triggered if the value is modified." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Event" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Simple class.",
						"params": { "name": "The name of the data item.", "parent": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "object" }
						}
					]
				},
				"valueOf": {
					"name": "valueOf",
					"comment": { "description": "Obtains the value of the Simple data type", "return": "The value of the Type." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [],
					"type": { "name": "any" }
				},
				"checkValue": {
					"name": "checkValue",
					"comment": {
						"description": "Checks if the value is valid for the Simple data type,",
						"params": { "value": "The value to check." },
						"return": "A boolean value indicating whether the value is valid or not."
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "value",
							"type": { "name": "BasicType" }
						}
					],
					"type": { "name": "boolean" }
				}
			},
			"imports": [ "Item", "Type", "Event" ]
		},
		"Extension": {
			"name": "Extension",
			"comment": { "description": "Defines the basic class of a Pose Extension." },
			"type": { "name": "Item" },
			"file": "data/model/Extension.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Extension class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"extension\"" },
						{ "name": "Extension" },
						{ "name": "Item" }
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Extension class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type" ]
		},
		"Frame": {
			"name": "Frame",
			"comment": { "description": "Defines a reference frame." },
			"type": { "name": "Item" },
			"file": "data/model/Frame.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Frame class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"frame\"" },
						{ "name": "Frame" },
						{ "name": "Item" }
					]
				},
				"_shape": {
					"name": "_shape",
					"comment": { "description": "The shape of the reference frame." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Shape" }
				},
				"shape": {
					"name": "shape",
					"comment": { "description": "The shape of the reference frame." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Frame class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Shape" ]
		},
		"GeoFrame": {
			"name": "GeoFrame",
			"comment": { "description": "Defines a geographical frame." },
			"type": { "name": "Frame" },
			"file": "data/model/frames/GeoFrame.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the GeoFrame class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"geo-frame\"" },
						{ "name": "GeoFrame" },
						{ "name": "Frame" }
					]
				},
				"_semiMajorAxis": {
					"name": "_semiMajorAxis",
					"comment": { "description": "The semi major axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Distance" }
				},
				"_semiMinorAxis": {
					"name": "_semiMinorAxis",
					"comment": { "description": "The semi minor axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Distance" }
				},
				"_flattening": {
					"name": "_flattening",
					"comment": { "description": "The flattening factor." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"semiMajorAxis": {
					"name": "semiMajorAxis",
					"comment": { "description": "The semi major axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Distance" }
				},
				"semiMinorAxis": {
					"name": "semiMinorAxis",
					"comment": { "description": "The semi minor axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Distance" }
				},
				"flattening": {
					"name": "flattening",
					"comment": { "description": "The flattening factor." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the GeoFrame class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Frame", "Distance", "Number" ]
		},
		"GeoPose": {
			"name": "GeoPose",
			"comment": { "description": "Defines the GeoPose of an object." },
			"type": { "name": "Item" },
			"file": "data/model/GeoPose.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Pose class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"geopose\"" },
						{ "name": "GeoPose" },
						{ "name": "Item" }
					]
				},
				"_frame": {
					"name": "_frame",
					"comment": { "description": "The frame of the GeoPose." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "GeoFrame" }
				},
				"_extensions": {
					"name": "_extensions",
					"comment": { "description": "The extensions of the GeoPose." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "Extension" }
					}
				},
				"frame": {
					"name": "frame",
					"comment": { "description": "The frame of the GeoPose." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "GeoFrame" }
				},
				"extensions": {
					"name": "extensions",
					"comment": { "description": "The extensions of the GeoPose." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "List",
						"subtype": { "name": "Extension" }
					}
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the GeoPose class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "List", "GeoFrame", "Extension" ]
		},
		"GeoPoseBasicQuaternion": {
			"name": "GeoPoseBasicQuaternion",
			"comment": { "description": "Defines a basic GeoPose with Quaternion-based orientation." },
			"type": { "name": "GeoPose" },
			"file": "data/model/geoposes/GeoPoseBasicQuaternion.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the GeoPoseBasicQuaternion class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"geopose-basic-quaternion\"" },
						{ "name": "GeoPoseBasicQuaternion" },
						{ "name": "GeoPose" }
					]
				},
				"_position": {
					"name": "_position",
					"comment": { "description": "The position of the GeoPose." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "GeoPosition" }
				},
				"_orientation": {
					"name": "_orientation",
					"comment": { "description": "The orientation of the GeoPose." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "QuaternionOrientation" }
				},
				"position": {
					"name": "position",
					"comment": { "description": "The position of the GeoPose." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "GeoPosition" }
				},
				"orientation": {
					"name": "orientation",
					"comment": { "description": "The orientation of the GeoPose." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "QuaternionOrientation" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the GeoPoseBasicQuaternion class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "GeoPose", "GeoPosition", "QuaternionOrientation" ]
		},
		"GeoPoseBasicYPR": {
			"name": "GeoPoseBasicYPR",
			"comment": { "description": "Defines a basic GeoPose with Yaw-Pitch-Roll orientation." },
			"type": { "name": "GeoPose" },
			"file": "data/model/geoposes/GeoPoseBasicYPR.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the GeoPoseBasicYPR class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"geopose-basic-ypr\"" },
						{ "name": "GeoPoseBasicYPR" },
						{ "name": "GeoPose" }
					]
				},
				"_position": {
					"name": "_position",
					"comment": { "description": "The position of the GeoPose." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "GeoPosition" }
				},
				"_orientation": {
					"name": "_orientation",
					"comment": { "description": "The orientation of the GeoPose." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "YawPitchRollOrientation" }
				},
				"position": {
					"name": "position",
					"comment": { "description": "The position of the GeoPose." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "GeoPosition" }
				},
				"orientation": {
					"name": "orientation",
					"comment": { "description": "The orientation of the GeoPose." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "YawPitchRollOrientation" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the YawPitchRollOrientation class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "GeoPose", "GeoPosition", "YawPitchRollOrientation" ]
		},
		"Orientation": {
			"name": "Orientation",
			"comment": { "description": "Define the basic class of a three dimensional orientation." },
			"type": { "name": "Item" },
			"file": "data/model/Orientation.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Orientation class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"orientation\"" },
						{ "name": "Orientation" },
						{ "name": "Item" }
					]
				},
				"_relativeValues": {
					"name": "_relativeValues",
					"comment": { "description": "Define the relative orientation." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Quaternion" }
				},
				"_absoluteValues": {
					"name": "_absoluteValues",
					"comment": { "description": "Define the absolute orientation." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Quaternion" }
				},
				"relativeValues": {
					"name": "relativeValues",
					"comment": { "description": "The relative orientation." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"absoluteValues": {
					"name": "absoluteValues",
					"comment": { "description": "The absolute orientation." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Orientation class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Quaternion" ]
		},
		"LookAtOrientation": {
			"name": "LookAtOrientation",
			"comment": { "description": "Defines an orientation with a target." },
			"type": { "name": "Orientation" },
			"file": "data/model/orientations/LookAtOrientation.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the LookAtOrientation class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"look-at-orientation\"" },
						{ "name": "LookAtOrientation" },
						{ "name": "Orientation" }
					]
				},
				"_targetName": {
					"name": "_targetName",
					"comment": { "description": "The target to point towards." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "String" }
				},
				"_targetPosition": {
					"name": "_targetPosition",
					"comment": { "description": "The target position to point towards." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Vector" }
				},
				"targetName": {
					"name": "targetName",
					"comment": { "description": "The target to point towards." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "String" }
				},
				"targetPosition": {
					"name": "targetPosition",
					"comment": { "description": "The target position." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Vector" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the YawPitchRollOrientation class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Orientation", "String", "Vector" ]
		},
		"QuaternionOrientation": {
			"name": "QuaternionOrientation",
			"comment": { "description": "Defines an orientation with a quaternion." },
			"type": { "name": "Orientation" },
			"file": "data/model/orientations/QuaternionOrientation.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the QuaternionOrientation class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"quaternion-orientation\"" },
						{ "name": "QuaternionOrientation" },
						{ "name": "Orientation" }
					]
				},
				"_x": {
					"name": "_x",
					"comment": { "description": "The value of the quaternion vector in the X(i) axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_y": {
					"name": "_y",
					"comment": { "description": "The value of the quaternion vector in the Y(j) axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_z": {
					"name": "_z",
					"comment": { "description": "The value of the quaternion vector in the Z(k) axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_w": {
					"name": "_w",
					"comment": { "description": "The rotation half-angle around the quaternion vector." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"x": {
					"name": "x",
					"comment": { "description": "The value of the quaternion vector in the X(i) axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"y": {
					"name": "y",
					"comment": { "description": "The value of the quaternion vector in the Y(j) axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"z": {
					"name": "z",
					"comment": { "description": "The value of the quaternion vector in the Z(k) axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"w": {
					"name": "w",
					"comment": { "description": "The rotation half-angle around the quaternion vector." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the QuaternionOrientation class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Orientation", "Number" ]
		},
		"YawPitchRollOrientation": {
			"name": "YawPitchRollOrientation",
			"comment": { "description": "Defines an orientation with Yaw, Pitch and Roll angles." },
			"type": { "name": "Orientation" },
			"file": "data/model/orientations/YawPitchRollOrientation.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the YawPitchRollOrientation class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"yaw-pitch-roll-orientation\"" },
						{ "name": "YawPitchRollOrientation" },
						{ "name": "Orientation" }
					]
				},
				"_yaw": {
					"name": "_yaw",
					"comment": { "description": "The Angle in degrees around the equator of the globe." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Angle" }
				},
				"_pitch": {
					"name": "_pitch",
					"comment": { "description": "The Angle in degrees around the prime meridian of the globe." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Angle" }
				},
				"_roll": {
					"name": "_roll",
					"comment": { "description": "The vertical Distance relative to the surface to the globe." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Angle" }
				},
				"yaw": {
					"name": "yaw",
					"comment": { "description": "The Angle in degrees around the equator of the globe." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"pitch": {
					"name": "pitch",
					"comment": { "description": "The Angle in degrees around the prime meridian of the globe." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"roll": {
					"name": "roll",
					"comment": { "description": "The vertical distance relative to the surface to the globe." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the YawPitchRollOrientation class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Orientation", "Angle" ]
		},
		"Pose": {
			"name": "Pose",
			"comment": { "description": "Defines a Pose of an object." },
			"type": { "name": "Item" },
			"file": "data/model/Pose.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Pose class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"pose\"" },
						{ "name": "Pose" },
						{ "name": "Item" }
					]
				},
				"_position": {
					"name": "_position",
					"comment": { "description": "The position of the Pose." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Position" }
				},
				"_orientation": {
					"name": "_orientation",
					"comment": { "description": "The orientation of the Pose." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Orientation" }
				},
				"_parentPose": {
					"name": "_parentPose",
					"comment": { "description": "The parent Pose." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Pose" }
				},
				"_childPoses": {
					"name": "_childPoses",
					"comment": { "description": "The children Poses." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "Pose" }
					}
				},
				"position": {
					"name": "position",
					"comment": { "description": "The position of the Pose." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Position" }
				},
				"orientation": {
					"name": "orientation",
					"comment": { "description": "The orientation of the Pose." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Orientation" }
				},
				"parent": {
					"name": "parent",
					"comment": { "description": "The parent Pose." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Pose" }
				},
				"childPoses": {
					"name": "childPoses",
					"comment": { "description": "The child Poses." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "List",
						"subtype": { "name": "Pose" }
					}
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Pose class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Collection", "Frame", "Position", "Orientation", "Extension", "List" ]
		},
		"Position": {
			"name": "Position",
			"comment": { "description": "Defines a basic position within a reference frame." },
			"type": { "name": "Item" },
			"file": "data/model/Position.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Position class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"position\"" },
						{ "name": "Position" },
						{ "name": "Item" }
					]
				},
				"_relativeValues": {
					"name": "_relativeValues",
					"comment": { "description": "Define the relative position." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Vector" }
				},
				"_absoluteValues": {
					"name": "_absoluteValues",
					"comment": { "description": "Define the absolute position." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Vector" }
				},
				"_verticalVector": {
					"name": "_verticalVector",
					"comment": { "description": "Define the vertical vector." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Vector" }
				},
				"_forwardVector": {
					"name": "_forwardVector",
					"comment": { "description": "Define the forward vector." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Vector" }
				},
				"relativeValues": {
					"name": "relativeValues",
					"comment": { "description": "The relative position." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"absoluteValues": {
					"name": "absoluteValues",
					"comment": { "description": "The absolute position." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"verticalVector": {
					"name": "verticalVector",
					"comment": { "description": "The vertical vector." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"forwardVector": {
					"name": "forwardVector",
					"comment": { "description": "The forward vector." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Location class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Vector" ]
		},
		"EuclideanPosition": {
			"name": "EuclideanPosition",
			"comment": { "description": "Defines a location in an euclidean coordinate system." },
			"type": { "name": "Position" },
			"file": "data/model/positions/EuclideanPosition.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the EuclideanPosition class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"euclidean-position\"" },
						{ "name": "EuclideanPosition" },
						{ "name": "Position" }
					]
				},
				"_x": {
					"name": "_x",
					"comment": { "description": "The distance from the origin in the X axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Distance" }
				},
				"_y": {
					"name": "_y",
					"comment": { "description": "The distance from the origin in the Y axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Distance" }
				},
				"_z": {
					"name": "_z",
					"comment": { "description": "The distance from the origin in the Z axis." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Distance" }
				},
				"x": {
					"name": "x",
					"comment": { "description": "The distance from the origin in the X axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"y": {
					"name": "y",
					"comment": { "description": "The distance from the origin in the Y axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"z": {
					"name": "z",
					"comment": { "description": "The distance from the origin in the Z axis." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the EuclideanPosition class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Position", "Distance" ]
		},
		"GeoPosition": {
			"name": "GeoPosition",
			"comment": { "description": "Defines a location in global (elliptical) coordinate system. (Based on PICE and LPT-ENU)." },
			"type": { "name": "Position" },
			"file": "data/model/positions/GeoPosition.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the EuclideanPosition class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"geo-position\"" },
						{ "name": "GeoPosition" },
						{ "name": "Position" }
					]
				},
				"_longitude": {
					"name": "_longitude",
					"comment": { "description": "The Angle in degrees around the equator of the globe." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Angle" }
				},
				"_latitude": {
					"name": "_latitude",
					"comment": { "description": "The Angle in degrees around the prime meridian of the globe." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Angle" }
				},
				"_altitude": {
					"name": "_altitude",
					"comment": { "description": "The vertical Distance relative to the surface to the globe." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Distance" }
				},
				"longitude": {
					"name": "longitude",
					"comment": { "description": "The Angle in degrees around the equator of the globe." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"latitude": {
					"name": "latitude",
					"comment": { "description": "The Angle in degrees around the prime meridian of the globe." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"altitude": {
					"name": "altitude",
					"comment": { "description": "The vertical Distance relative to the surface to the globe." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": []
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the GeoPosition class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Position", "Angle", "Distance" ]
		},
		"OrbitalPosition": {
			"name": "OrbitalPosition",
			"comment": { "description": "Defines a location in an orbital coordinate system." },
			"type": { "name": "Position" },
			"file": "data/model/positions/OrbitalPosition.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the OrbitalPosition class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"orbital-position\"" },
						{ "name": "OrbitalPosition" },
						{ "name": "Position" }
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the OrbitalPosition class.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Position" ]
		},
		"Relationship": {
			"name": "Relationship",
			"comment": { "description": "Defines a relationship between data items." },
			"type": null,
			"file": "data/Relationship.ts",
			"members": {
				"_name": {
					"name": "_name",
					"comment": { "description": "The name of the relationship." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "string" }
				},
				"_origin": {
					"name": "_origin",
					"comment": { "description": "The origin items of the relationship." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Item" }
				},
				"name": {
					"name": "name",
					"comment": { "description": "The name of the relationship." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "string" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Node class.",
						"params": { "name": "The name(s) of the relationship." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"type": { "name": "string" }
						}
					]
				}
			},
			"imports": [ "Item" ]
		},
		"Serialization": {
			"name": "Serialization",
			"comment": { "description": "Provides multiple methods to serialize and deserialize data items." },
			"type": null,
			"file": "data/Serialization.ts",
			"members": {
				"serialize": {
					"name": "serialize",
					"comment": {
						"description": "Serializes a Item instance into an object.",
						"params": { "item": "The format to use in the serialization." },
						"return": "The serialized data."
					},
					"modifiers": [ "static", "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "item",
							"type": { "name": "Item" }
						},
						{
							"name": "format",
							"optional": true,
							"type": { "name": "SerializationFormat" }
						}
					],
					"type": { "name": "object" }
				},
				"deserialize": {
					"name": "deserialize",
					"comment": {
						"description": "Deserializes generic data into a data Item.",
						"params": { "item": "The data item to store the data.", "data": "The data to deserialize." }
					},
					"modifiers": [ "static", "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "item",
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"type": { "name": "any" }
						}
					]
				},
				"fromWords": {
					"name": "fromWords",
					"comment": {
						"description": "Parses a string.",
						"params": { "s": "The string to parse." },
						"return": "The CSV data."
					},
					"modifiers": [ "static", "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "s",
							"type": { "name": "string" }
						},
						{ "name": "separator", "defaultValue": "' '" }
					],
					"type": { "name": "object" }
				},
				"fromCSV": {
					"name": "fromCSV",
					"comment": {
						"description": "Parses a CSV (Comma-Separated-Values) string.",
						"params": { "s": "The string to parse." },
						"return": "The parsed data."
					},
					"modifiers": [ "static", "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "s",
							"type": { "name": "string" }
						}
					],
					"type": { "name": "object" }
				},
				"fromJSON": {
					"name": "fromJSON",
					"comment": {
						"description": "Parses a JSON (JavaScript-Object-Notation) string.",
						"params": { "s": "The string to parse." },
						"return": "The parsed data."
					},
					"modifiers": [ "static", "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "s",
							"type": { "name": "string" }
						}
					],
					"type": { "name": "object" }
				},
				"toCSV": {
					"name": "toCSV",
					"comment": {
						"description": "Converts an object into a CSV (Comma-Separated-Values) string.",
						"params": { "data": "The data object to convert." },
						"return": "The CSV representation of the object."
					},
					"modifiers": [ "static", "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "data",
							"type": { "name": "object" }
						}
					],
					"type": { "name": "string" }
				},
				"toJSON": {
					"name": "toJSON",
					"comment": {
						"description": "Converts an object into a JSON (JavaScript-Object-Notation) string.",
						"params": { "data": "The data object to convert." },
						"return": "The JSON representation of the object."
					},
					"modifiers": [ "static", "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "data",
							"type": { "name": "object" }
						},
						{
							"name": "maxIndentation",
							"type": { "name": "number" },
							"defaultValue": "0"
						}
					],
					"type": { "name": "string" }
				},
				"toString": {
					"name": "toString",
					"comment": {
						"description": "Serializes a data item into a string.",
						"params": { "item": "The data item to serialize to a string." },
						"return": "The resulting string."
					},
					"modifiers": [ "static", "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "item",
							"type": { "name": "Item" }
						}
					],
					"type": { "name": "string" }
				}
			},
			"imports": [ "Item" ]
		},
		"Type": {
			"name": "Type",
			"comment": { "description": "Contains the metadata of a data type. Provides a way to handle reflection and serialization in different contexts (even after the code is transpiled to Javascript)." },
			"type": null,
			"file": "data/Type.ts",
			"members": {
				"_record": {
					"name": "_record",
					"comment": { "description": "The global list of Type instances." },
					"modifiers": [ "static", "private" ],
					"kind": "field",
					"type": {
						"name": "Record",
						"subtype": { "name": "string" }
					}
				},
				"_name": {
					"name": "_name",
					"comment": { "description": "The name of the data type." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "string" }
				},
				"_innerType": {
					"name": "_innerType",
					"comment": { "description": "The inner type of the data type." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "any" }
				},
				"_parent": {
					"name": "_parent",
					"comment": { "description": "The parent data type." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Type" }
				},
				"_children": {
					"name": "_children",
					"comment": { "description": "The children data types." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Type" }
				},
				"record": {
					"name": "record",
					"comment": { "description": "The global list of Type instances." },
					"modifiers": [ "get", "static", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "Record",
						"subtype": { "name": "string" }
					}
				},
				"name": {
					"name": "name",
					"comment": { "description": "The name of the data type." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "string" }
				},
				"parent": {
					"name": "parent",
					"comment": { "description": "The parent data type." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Type" }
				},
				"children": {
					"name": "children",
					"comment": { "description": "The children data types." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Type" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new instance of the Type class.",
						"params": { "name": "The name of the data type.", "innerType": "The Javascript type.", "parent": "The parent data type." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"type": { "name": "string" }
						},
						{
							"name": "innerType",
							"type": { "name": "CallableFunction" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Type" }
						}
					]
				},
				"is": {
					"name": "is",
					"comment": {
						"description": "Check if the type is (or inherits from) another.",
						"params": { "type": "The type to check against." },
						"return": "A boolean indicating whether the types are the same or not."
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "type",
							"type": { "name": "Type" }
						}
					],
					"type": { "name": "boolean" }
				}
			},
			"imports": []
		},
		"GeoPoseSandbox": {
			"name": "GeoPoseSandbox",
			"comment": { "description": "Manages the GeoPose Sandbox." },
			"type": { "name": "Item" },
			"file": "GeoPoseSandbox.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the GeoPoseWidget class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"root\"" },
						{ "name": "GeoPoseSandbox" },
						{ "name": "Item" }
					]
				},
				"_instances": {
					"name": "_instances",
					"comment": { "description": "The global list of GeoPoseSandbox instances." },
					"modifiers": [ "static", "private" ],
					"kind": "field",
					"type": { "name": "GeoPoseSandbox" }
				},
				"_autoInit": {
					"name": "_autoInit",
					"comment": { "description": "Indicates if the GeoPose Sandbox should be automatically initialized. This value is true by default to allow custom HTML elements." },
					"modifiers": [ "static", "private" ],
					"kind": "field",
					"type": { "name": "boolean" }
				},
				"_spaces": {
					"name": "_spaces",
					"comment": { "description": "The interaction spaces of the GeoPoseSandbox instance." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "Space" }
					}
				},
				"_users": {
					"name": "_users",
					"comment": { "description": "The users of the GeoPoseSandbox instance." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "User" }
					}
				},
				"id": {
					"name": "id",
					"comment": { "description": "The name of the Geopose Sandbox." },
					"modifiers": [ "get", "static", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "string" }
				},
				"version": {
					"name": "version",
					"comment": { "description": "The version number of the Geopose Sandbox." },
					"modifiers": [ "get", "static", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "string" }
				},
				"instances": {
					"name": "instances",
					"comment": { "description": "The list of GeoPoseSandbox instances." },
					"modifiers": [ "get", "static", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "GeoPoseSandbox" }
				},
				"autoInit": {
					"name": "autoInit",
					"comment": { "description": "The list of GeoPoseSandbox instances." },
					"modifiers": [ "set", "static", "public" ],
					"kind": "accessor",
					"parameters": [
						{
							"name": "value",
							"type": { "name": "boolean" }
						}
					]
				},
				"spaces": {
					"name": "spaces",
					"comment": { "description": "The interaction spaces of the GeoPoseSandbox instance." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "List",
						"subtype": { "name": "Space" }
					}
				},
				"users": {
					"name": "users",
					"comment": { "description": "The interaction spaces of the GeoPoseSandbox instance." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "List",
						"subtype": { "name": "User" }
					}
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new GeoPoseSandbox instance.",
						"params": { "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"init": {
					"name": "init",
					"comment": {
						"description": "Initializes a new GeoPoseSandbox instance.",
						"params": { "params": "The initialization parameters." },
						"return": "The new GeoPoseSandbox instance."
					},
					"modifiers": [ "static", "public" ],
					"kind": "method",
					"parameters": [
						{ "name": "params", "defaultValue": "{" }
					]
				}
			},
			"imports": [ "List", "Item", "Type", "Space", "User" ]
		},
		"Behavior": {
			"name": "Behavior",
			"comment": { "description": "Defines an logic behavior," },
			"type": { "name": "Item" },
			"file": "logic/Behavior.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Behavior class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"behavior\"" },
						{ "name": "Behavior" },
						{ "name": "Item" }
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new Behavior instance.",
						"params": { "name": "The name of the logic behavior.", "parent": "The parent item." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						}
					]
				}
			},
			"imports": [ "Item", "Type" ]
		},
		"PresenceEntity": {
			"name": "PresenceEntity",
			"comment": { "description": "Defines a user Presence entity." },
			"type": { "name": "Entity" },
			"file": "logic/entities/PresenceEntity.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the PresenceEntity class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"presence-entity\"" },
						{ "name": "PresenceEntity" },
						{ "name": "Entity" }
					]
				},
				"_camera": {
					"name": "_camera",
					"comment": { "description": "The field of view of the Camera." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_fieldOfView": {
					"name": "_fieldOfView",
					"comment": { "description": "The field of view of the Camera." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_aspectRatio": {
					"name": "_aspectRatio",
					"comment": { "description": "The aspect ratio of the Camera." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_nearPlane": {
					"name": "_nearPlane",
					"comment": { "description": "The near plane of the Camera frustum." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_farPlane": {
					"name": "_farPlane",
					"comment": { "description": "The far plane of the Camera frustum." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"fieldOfView": {
					"name": "fieldOfView",
					"comment": { "description": "The field of view of the Camera." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"aspectRatio": {
					"name": "aspectRatio",
					"comment": { "description": "The aspect ratio of the Camera." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"nearPlane": {
					"name": "nearPlane",
					"comment": { "description": "The near plane of the Camera frustum." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"farPlane": {
					"name": "farPlane",
					"comment": { "description": "The far plane of the Camera frustum." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new PresenceEntity instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"update": {
					"name": "update",
					"comment": {
						"description": "Updates the Entity.",
						"params": { "deltaTime": "The update time.", "forced": "Indicates whether the update is forced or not." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "deltaTime",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "forced",
							"type": { "name": "boolean" },
							"defaultValue": "false"
						}
					]
				}
			},
			"imports": [ "three", "Item", "Type", "Entity", "Number" ]
		},
		"ShapeEntity": {
			"name": "ShapeEntity",
			"comment": { "description": "Defines a Shape entity." },
			"type": { "name": "Entity" },
			"file": "logic/entities/ShapeEntity.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the ShapeEntity class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"shape-entity\"" },
						{ "name": "ShapeEntity" },
						{ "name": "Entity" }
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new ShapeEntity instance.",
						"params": { "name": "The name of the entity.", "parentNode": "The parent entity." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Entity" }
						},
						{
							"name": "radius",
							"type": { "name": "number" },
							"defaultValue": "1"
						}
					]
				}
			},
			"imports": [ "three", "Item", "Type", "Entity" ]
		},
		"SpaceEntity": {
			"name": "SpaceEntity",
			"comment": { "description": "Defines a Space entity." },
			"type": { "name": "Entity" },
			"file": "logic/entities/SpaceEntity.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the SpaceEntity class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"space-entity\"" },
						{ "name": "SpaceEntity" },
						{ "name": "Entity" }
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new SpaceEntity instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "three", "Item", "Type", "Entity" ]
		},
		"TerrainEntity": {
			"name": "TerrainEntity",
			"comment": { "description": "Defines a TerrainEntity Entity." },
			"type": { "name": "Entity" },
			"file": "logic/entities/TerrainEntity.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the TerrainEntity class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"terrain-entity\"" },
						{ "name": "TerrainEntity" },
						{ "name": "Entity" }
					]
				},
				"_mesh": {
					"name": "_mesh",
					"comment": { "description": "The mesh of the terrain." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "THREE.Mesh" }
				},
				"_shape": {
					"name": "_shape",
					"comment": { "description": "The shape of the terrain." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Ellipsoid" }
				},
				"_texture": {
					"name": "_texture",
					"comment": { "description": "The texture of the terrain." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "String" }
				},
				"shape": {
					"name": "shape",
					"comment": { "description": "The shape of the component." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Ellipsoid" }
				},
				"texture": {
					"name": "texture",
					"comment": { "description": "The shape of the component." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "String" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new TerrainEntity instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"update": {
					"name": "update",
					"comment": {
						"description": "Updates the TerrainEntity instance.",
						"params": { "deltaTime": "The update time.", "forced": "Indicates whether the update is forced or not." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "deltaTime",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "forced",
							"type": { "name": "boolean" },
							"defaultValue": "false"
						}
					]
				}
			},
			"imports": [ "three", "Item", "Type", "Entity", "Ellipsoid", "String" ]
		},
		"Entity": {
			"name": "Entity",
			"comment": { "description": "Defines a logic entity." },
			"type": { "name": "Item" },
			"file": "logic/Entity.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Entity class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"entity\"" },
						{ "name": "Entity" },
						{ "name": "Item" }
					]
				},
				"_representation": {
					"name": "_representation",
					"comment": { "description": "The representation of the entity." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "THREE.Object3D" }
				},
				"_pose": {
					"name": "_pose",
					"comment": { "description": "The pose of the entity." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "Pose" }
				},
				"representation": {
					"name": "representation",
					"comment": { "description": "The representation of the entity." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "THREE.Object3D" }
				},
				"pose": {
					"name": "pose",
					"comment": { "description": "The pose of the entity." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Pose" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new Entity instance.",
						"params": { "name": "The name of the item.", "parent": "The parent item.", "representation": "The representation of the entity." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "representation",
							"optional": true,
							"type": { "name": "THREE.Object3D" }
						}
					]
				},
				"update": {
					"name": "update",
					"comment": {
						"description": "Updates the Entity.",
						"params": { "deltaTime": "The update time.", "forced": "Indicates whether the update is forced or not." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "deltaTime",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "forced",
							"type": { "name": "boolean" },
							"defaultValue": "false"
						}
					]
				}
			},
			"imports": [ "three", "Item", "Type", "Pose" ]
		},
		"Event": {
			"name": "Event",
			"comment": { "description": "Defines a Logic Event" },
			"type": null,
			"file": "logic/Event.ts",
			"members": {
				"_type": {
					"name": "_type",
					"comment": { "description": "The event type." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "string" }
				},
				"_owner": {
					"name": "_owner",
					"comment": { "description": "The event owner." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "object" }
				},
				"_data": {
					"name": "_data",
					"comment": { "description": "The event data." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "object" }
				},
				"_listeners": {
					"name": "_listeners",
					"comment": { "description": "The event listeners." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "CallableFunction" }
				},
				"owner": {
					"name": "owner",
					"comment": { "description": "The event owner." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "object" }
				},
				"data": {
					"name": "data",
					"comment": { "description": "The event data." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "object" }
				},
				"listeners": {
					"name": "listeners",
					"comment": { "description": "The event listeners." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "any" }
				},
				"isEvent": {
					"name": "isEvent",
					"comment": { "description": "Marks the object as an Event." },
					"modifiers": [ "public" ],
					"kind": "field",
					"type": { "name": "boolean" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new Event instance.",
						"params": { "type": "The event type.", "owner": "The event owner.", "data": "The event data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "type",
							"type": { "name": "string" }
						},
						{
							"name": "owner",
							"optional": true,
							"type": { "name": "object" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "object" }
						}
					]
				},
				"add": {
					"name": "add",
					"comment": {
						"description": "Adds a listener for the event.",
						"params": { "listener": "The listener function to add." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "listener",
							"type": { "name": "CallableFunction" }
						}
					]
				},
				"removes": {
					"name": "removes",
					"comment": {
						"description": "Removes a listener for the event.",
						"params": { "listener": "The listener function to add." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "listener",
							"type": { "name": "CallableFunction" }
						}
					]
				},
				"trigger": {
					"name": "trigger",
					"comment": {
						"description": "Triggers the event.",
						"params": { "target": "The object that triggers the event.", "data": "Additional event data." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "target",
							"optional": true,
							"type": { "name": "any" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": []
		},
		"ViewPort": {
			"name": "ViewPort",
			"comment": { "description": "Defines a Viewport." },
			"type": null,
			"file": "logic/ViewPort.ts",
			"members": {
				"_canvas": {
					"name": "_canvas",
					"comment": { "description": "The canvas element of the viewport." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "HTMLCanvasElement" }
				},
				"_renderer": {
					"name": "_renderer",
					"comment": { "description": "The renderer of the viewport." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "THREE.WebGLRenderer" }
				},
				"_width": {
					"name": "_width",
					"comment": { "description": "The width of the viewport." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"_height": {
					"name": "_height",
					"comment": { "description": "The height of the viewport." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"canvas": {
					"name": "canvas",
					"comment": { "description": "The canvas element of the viewport." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "HTMLCanvasElement" }
				},
				"renderer": {
					"name": "renderer",
					"comment": { "description": "The renderer of the viewport." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "THREE.WebGLRenderer" }
				},
				"width": {
					"name": "width",
					"comment": { "description": "The width of the viewport." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "number" }
				},
				"height": {
					"name": "height",
					"comment": { "description": "The height of the viewport." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "number" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new ViewPort instance.",
						"params": { "canvas": "The canvas of the viewport.", "updateFunction": "The callback for the." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{ "name": "canvas" },
						{ "name": "updateFunction" }
					]
				},
				"resize": {
					"name": "resize",
					"comment": {
						"description": "Resizes the viewport.",
						"params": { "width": "The new width of the viewport.", "height": "The new height of the viewport." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{ "name": "width" },
						{ "name": "height" }
					]
				},
				"render": {
					"name": "render",
					"comment": {
						"description": "Renders the viewport.",
						"params": { "presence": "The presence of a user in a interaction space" }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "presence",
							"type": { "name": "Presence" }
						}
					]
				}
			},
			"imports": [ "three", "Presence" ]
		},
		"Component": {
			"name": "Component",
			"comment": { "description": "Defines an interaction component" },
			"type": { "name": "Item" },
			"file": "user/interaction/Component.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Component class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"component\"" },
						{ "name": "Component" },
						{ "name": "Item" }
					]
				},
				"_entity": {
					"name": "_entity",
					"comment": { "description": "The entity of the component." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "Entity" }
				},
				"_parentEntity": {
					"name": "_parentEntity",
					"comment": { "description": "The parent entity of the component." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": { "name": "Entity" }
				},
				"entity": {
					"name": "entity",
					"comment": { "description": "The entity of the component." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Entity" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new Component instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"update": {
					"name": "update",
					"comment": {
						"description": "Updates the Component.",
						"params": { "deltaTime": "The update time.", "forced": "Indicates whether the update is forced or not." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "deltaTime",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "forced",
							"type": { "name": "boolean" },
							"defaultValue": "false"
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Entity", "Widget" ]
		},
		"PlanetComponent": {
			"name": "PlanetComponent",
			"comment": { "description": "Defines a planet component for a user interaction widget." },
			"type": { "name": "Component" },
			"file": "user/interaction/components/PlanetComponent.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Component class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"planet-component\"" },
						{ "name": "Component" },
						{ "name": "Component" }
					]
				},
				"_terrain": {
					"name": "_terrain",
					"comment": { "description": "The shape of the component." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "TerrainEntity" }
				},
				"shape": {
					"name": "shape",
					"comment": { "description": "The shape of the component." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Ellipsoid" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new PlanetComponent instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Component", "TerrainEntity", "Ellipsoid" ]
		},
		"ShapeComponent": {
			"name": "ShapeComponent",
			"comment": { "description": "Defines a shape component for a user interaction widget." },
			"type": { "name": "Component" },
			"file": "user/interaction/components/ShapeComponent.ts",
			"members": {
				"_shape": {
					"name": "_shape",
					"comment": { "description": "The shape of the component." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Shape" }
				},
				"shape": {
					"name": "shape",
					"comment": { "description": "The shape of the component." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Shape" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new ShapeComponent instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"update": {
					"name": "update",
					"comment": {
						"description": "Updates the ShapeComponent instance.",
						"params": { "deltaTime": "The update time.", "forced": "Indicates whether the update is forced or not." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "deltaTime",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "forced",
							"type": { "name": "boolean" },
							"defaultValue": "false"
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Component", "ShapeEntity", "Shape" ]
		},
		"Layer": {
			"name": "Layer",
			"comment": { "description": "Defines an user interaction (view) layer ." },
			"type": { "name": "Item" },
			"file": "user/interaction/Layer.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Layer class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"layer\"" },
						{ "name": "Layer" },
						{ "name": "Item" }
					]
				},
				"_widgets": {
					"name": "_widgets",
					"comment": { "description": "The widgets of the layer." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "Widget" }
					}
				},
				"_space": {
					"name": "_space",
					"comment": { "description": "The space associated to the layer." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Space" }
				},
				"_presence": {
					"name": "_presence",
					"comment": { "description": "The associated to the layer." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Presence" }
				},
				"widgets": {
					"name": "widgets",
					"comment": { "description": "The widgets of the layer." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "List",
						"subtype": { "name": "Widget" }
					}
				},
				"space": {
					"name": "space",
					"comment": { "description": "The Interaction Space associated to the layer." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Space" }
				},
				"presence": {
					"name": "presence",
					"comment": { "description": "The user Presence in the layer." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Presence" }
				},
				"entity": {
					"name": "entity",
					"comment": { "description": "The entity associated to the layer." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Entity" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new Layer instance.",
						"params": { "name": "The parent data item.", "presence": "The user presence associated with the layer." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"type": { "name": "Item" }
						},
						{
							"name": "presence",
							"type": { "name": "Presence" }
						}
					]
				},
				"update": {
					"name": "update",
					"comment": {
						"description": "Updates the space.",
						"params": { "deltaTime": "The update time.", "forced": "Indicates whether the update is forced or not." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "deltaTime",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "forced",
							"type": { "name": "boolean" },
							"defaultValue": "false"
						}
					]
				}
			},
			"imports": [ "Item", "Type", "List", "Presence", "Space", "Widget", "Entity" ]
		},
		"Presence": {
			"name": "Presence",
			"comment": { "description": "Defines the user Presence in an interaction space." },
			"type": { "name": "Item" },
			"file": "user/interaction/Presence.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Presence class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"presence\"" },
						{ "name": "Presence" },
						{ "name": "Item" }
					]
				},
				"_entity": {
					"name": "_entity",
					"comment": { "description": "The main entity of the presence." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "PresenceEntity" }
				},
				"_space": {
					"name": "_space",
					"comment": { "description": "The space associated with the presence." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Space" }
				},
				"entity": {
					"name": "entity",
					"comment": { "description": "The entity associated with this presence." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "PresenceEntity" }
				},
				"space": {
					"name": "space",
					"comment": { "description": "The space associated with the presence." },
					"modifiers": [ "set", "public" ],
					"kind": "accessor",
					"parameters": [
						{
							"name": "space",
							"type": { "name": "Space" }
						}
					]
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new Presence instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "PresenceEntity", "Space" ]
		},
		"Space": {
			"name": "Space",
			"comment": { "description": "Defines an Interaction Space." },
			"type": { "name": "Item" },
			"file": "user/interaction/Space.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Space class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"space\"" },
						{ "name": "Space" },
						{ "name": "Item" }
					]
				},
				"_entity": {
					"name": "_entity",
					"comment": { "description": "The entity of the space." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "SpaceEntity" }
				},
				"_spaces": {
					"name": "_spaces",
					"comment": { "description": "The subspaces of the space." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "Space" }
					}
				},
				"_presences": {
					"name": "_presences",
					"comment": { "description": "The user presences in the space." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "Presence" }
					}
				},
				"_widgets": {
					"name": "_widgets",
					"comment": { "description": "The widgets in the space." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "Widget" }
					}
				},
				"entity": {
					"name": "entity",
					"comment": { "description": "The entity of the space." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "SpaceEntity" }
				},
				"spaces": {
					"name": "spaces",
					"comment": { "description": "The subspaces of the space." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "List",
						"subtype": { "name": "Space" }
					}
				},
				"presences": {
					"name": "presences",
					"comment": { "description": "The user presences in the space." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "List",
						"subtype": { "name": "Presence" }
					}
				},
				"widgets": {
					"name": "widgets",
					"comment": { "description": "The widgets of the space." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "List",
						"subtype": { "name": "Widget" }
					}
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new Space instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"update": {
					"name": "update",
					"comment": {
						"description": "Updates the space.",
						"params": { "deltaTime": "The update time.", "forced": "Indicates whether the update is forced or not." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "deltaTime",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "forced",
							"type": { "name": "boolean" },
							"defaultValue": "false"
						}
					]
				}
			},
			"imports": [ "Item", "Type", "List", "SpaceEntity", "Presence", "Widget" ]
		},
		"View": {
			"name": "View",
			"comment": { "description": "Defines a User Interaction View." },
			"type": { "name": "Item" },
			"file": "user/interaction/View.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the View class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"view\"" },
						{ "name": "View" },
						{ "name": "Item" }
					]
				},
				"_element": {
					"name": "_element",
					"comment": { "description": "The main element of the view." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "HTMLElement" }
				},
				"_canvas": {
					"name": "_canvas",
					"comment": { "description": "The canvas element of the view." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "HTMLCanvasElement" }
				},
				"_viewport": {
					"name": "_viewport",
					"comment": { "description": "The viewport of the view." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "ViewPort" }
				},
				"_state": {
					"name": "_state",
					"comment": { "description": "The state of the view." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "String" }
				},
				"_width": {
					"name": "_width",
					"comment": { "description": "The width of the view." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_height": {
					"name": "_height",
					"comment": { "description": "The height of the view." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Number" }
				},
				"_layers": {
					"name": "_layers",
					"comment": { "description": "The layers of the view." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "Layer" }
					}
				},
				"_deltaTime": {
					"name": "_deltaTime",
					"comment": { "description": "The time between updates." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"_lastTime": {
					"name": "_lastTime",
					"comment": { "description": "The last update time." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"_fpsCounter": {
					"name": "_fpsCounter",
					"comment": { "description": "The Frames Per Second counter." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"_fpsTimer": {
					"name": "_fpsTimer",
					"comment": { "description": "The Frames Per Second timer." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"_fpsValue": {
					"name": "_fpsValue",
					"comment": { "description": "The current Frames Per Second value." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"_fpsValues": {
					"name": "_fpsValues",
					"comment": { "description": "The list of Frames Per Second values." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"_fpsValuesMaxSize": {
					"name": "_fpsValuesMaxSize",
					"comment": { "description": "The maximum size of the array of Frames Per Second values." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "number" }
				},
				"element": {
					"name": "element",
					"comment": { "description": "The main element of the view." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "HTMLElement" }
				},
				"canvas": {
					"name": "canvas",
					"comment": { "description": "The canvas element of the view." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "HTMLCanvasElement" }
				},
				"state": {
					"name": "state",
					"comment": { "description": "The state of the view." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "String" }
				},
				"width": {
					"name": "width",
					"comment": { "description": "The width of the view." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"height": {
					"name": "height",
					"comment": { "description": "The height of the view." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Number" }
				},
				"layers": {
					"name": "layers",
					"comment": { "description": "The layers of the view." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "List",
						"subtype": { "name": "Layer" }
					}
				},
				"fpsValue": {
					"name": "fpsValue",
					"comment": { "description": "The current Frames Per Second value." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "number" }
				},
				"fpsValues": {
					"name": "fpsValues",
					"comment": { "description": "The list of Frames Per Second values." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "number" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new View instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"update": {
					"name": "update",
					"comment": {
						"description": "Updates the view instance.",
						"params": { "time": "The time (in milliseconds) since the last call." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "time",
							"type": { "name": "number" },
							"defaultValue": "0"
						}
					]
				},
				"resize": {
					"name": "resize",
					"comment": { "description": "Resizes the view." },
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": []
				},
				"createDomElement": {
					"name": "createDomElement",
					"comment": {
						"description": "Creates a DOM element",
						"params": { "type": "The type of the element (its tag name)", "id": "The id of the element.", "parent": "The parent of the element.", "classes": "The classes of the element.", "style": "The style of the element.", "content": "The HTML content of the element." },
						"return": "The generated element."
					},
					"modifiers": [ "static", "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "type",
							"type": { "name": "string" }
						},
						{
							"name": "id",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "HTMLElement" }
						},
						{
							"name": "classes",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "style",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "content",
							"optional": true,
							"type": { "name": "string" }
						}
					],
					"type": { "name": "HTMLElement" }
				},
				"addCssRule": {
					"name": "addCssRule",
					"comment": {
						"description": "Creates a CSS rule.",
						"params": { "selector": "The CSS selector", "rule": "The css rule", "override": "Indicates whether to override rules or not." }
					},
					"modifiers": [ "static", "public" ],
					"kind": "method",
					"parameters": [
						{ "name": "selector" },
						{ "name": "rule" },
						{ "name": "override", "defaultValue": "false" }
					]
				}
			},
			"imports": [ "Item", "Type", "Number", "String", "List", "Layer", "User", "ViewPort" ]
		},
		"Widget": {
			"name": "Widget",
			"comment": { "description": "Defines an user interaction widget." },
			"type": { "name": "Item" },
			"file": "user/interaction/Widget.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the Widget class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"widget\"" },
						{ "name": "Widget" },
						{ "name": "Item" }
					]
				},
				"_entity": {
					"name": "_entity",
					"comment": { "description": "The entity of the widget." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Entity" }
				},
				"_parentEntity": {
					"name": "_parentEntity",
					"comment": { "description": "The parent entity of the widget." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "Entity" }
				},
				"_widgets": {
					"name": "_widgets",
					"comment": { "description": "The list of child widgets." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "Widget" }
					}
				},
				"_components": {
					"name": "_components",
					"comment": { "description": "The components of the widget." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "Component" }
					}
				},
				"entity": {
					"name": "entity",
					"comment": { "description": "The entity of the space." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "Entity" }
				},
				"widgets": {
					"name": "widgets",
					"comment": { "description": "The list of child widgets." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "List",
						"subtype": { "name": "Widget" }
					}
				},
				"components": {
					"name": "components",
					"comment": { "description": "The components of the widget." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "List",
						"subtype": { "name": "Component" }
					}
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new Widget instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				},
				"update": {
					"name": "update",
					"comment": {
						"description": "Updates the Widget instance.",
						"params": { "deltaTime": "The update time.", "forced": "Indicates whether the update is forced or not." }
					},
					"modifiers": [ "public" ],
					"kind": "method",
					"parameters": [
						{
							"name": "deltaTime",
							"type": { "name": "number" },
							"defaultValue": "0"
						},
						{
							"name": "forced",
							"type": { "name": "boolean" },
							"defaultValue": "false"
						}
					]
				}
			},
			"imports": [ "Item", "Type", "List", "Entity", "Component", "Space" ]
		},
		"PlanetWidget": {
			"name": "PlanetWidget",
			"comment": { "description": "Defines a widget for a planet." },
			"type": { "name": "Widget" },
			"file": "user/interaction/widgets/PlanetWidget.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the GeoPoseWidget class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"planet-widget\"" },
						{ "name": "PlanetWidget" },
						{ "name": "Widget" }
					]
				},
				"_planet": {
					"name": "_planet",
					"comment": { "description": "The component of the widget." },
					"modifiers": [ "private" ],
					"kind": "field",
					"type": { "name": "PlanetComponent" }
				},
				"planet": {
					"name": "planet",
					"comment": { "description": "The component of the widget." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": { "name": "PlanetComponent" }
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new PlanetWidget instance.",
						"params": { "name": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "Widget", "PlanetComponent" ]
		},
		"User": {
			"name": "User",
			"comment": { "description": "Defines a user." },
			"type": { "name": "Item" },
			"file": "user/User.ts",
			"members": {
				"Type": {
					"name": "Type",
					"comment": { "description": "The data type associated to the User class." },
					"modifiers": [ "public" ],
					"kind": "field",
					"parameters": [
						{ "name": "\"user\"" },
						{ "name": "User" },
						{ "name": "Item" }
					]
				},
				"_presences": {
					"name": "_presences",
					"comment": { "description": "The presences of the user in the interaction spaces." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "Presence" }
					}
				},
				"_views": {
					"name": "_views",
					"comment": { "description": "The view of the user." },
					"modifiers": [ "protected" ],
					"kind": "field",
					"type": {
						"name": "List",
						"subtype": { "name": "View" }
					}
				},
				"presences": {
					"name": "presences",
					"comment": { "description": "The presences of the user in the interaction spaces." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "List",
						"subtype": { "name": "Presence" }
					}
				},
				"views": {
					"name": "views",
					"comment": { "description": "The point of views of the user." },
					"modifiers": [ "get", "public" ],
					"kind": "accessor",
					"parameters": [],
					"type": {
						"name": "List",
						"subtype": { "name": "View" }
					}
				},
				"<constructor>": {
					"name": "constructor",
					"comment": {
						"description": "Initializes a new User class instance.",
						"params": { "name": "The name of the data item.", "parent": "The parent data item.", "data": "The initialization data." }
					},
					"modifiers": [ "public" ],
					"kind": "constructor",
					"parameters": [
						{
							"name": "name",
							"optional": true,
							"type": { "name": "string" }
						},
						{
							"name": "parent",
							"optional": true,
							"type": { "name": "Item" }
						},
						{
							"name": "data",
							"optional": true,
							"type": { "name": "any" }
						}
					]
				}
			},
			"imports": [ "Item", "Type", "List", "Presence", "View" ]
		}
	},
	"files": {
		"logic/Event.ts": {
			"classes": [ "Event" ],
			"links": []
		},
		"data/Type.ts": {
			"classes": [ "Type" ],
			"links": []
		},
		"data/Item.ts": {
			"classes": [ "Item" ],
			"links": [ "data/Type.ts", "logic/Event.ts", "data/Collection.ts", "data/Relationship.ts", "data/collections/List.ts", "data/Serialization.ts" ]
		},
		"GeoPoseSandbox.ts": {
			"classes": [ "GeoPoseSandbox" ],
			"links": [ "data/collections/List.ts", "data/Item.ts", "data/Type.ts", "user/interaction/Space.ts", "user/User.ts" ]
		},
		"data/Collection.ts": {
			"classes": [ "Collection" ],
			"links": [ "data/Item.ts", "data/Type.ts" ]
		},
		"data/Relationship.ts": {
			"classes": [ "Relationship" ],
			"links": [ "data/Item.ts" ]
		},
		"data/collections/List.ts": {
			"classes": [ "List" ],
			"links": [ "data/Collection.ts", "data/Item.ts", "data/Type.ts" ]
		},
		"data/Serialization.ts": {
			"classes": [ "Serialization" ],
			"links": [ "data/Item.ts" ]
		},
		"data/items/Complex.ts": {
			"classes": [ "Complex" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/simple/Number.ts" ]
		},
		"data/items/Simple.ts": {
			"classes": [ "Simple" ],
			"links": [ "data/Item.ts", "data/Type.ts", "logic/Event.ts" ]
		},
		"data/items/simple/Number.ts": {
			"classes": [ "Number" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Simple.ts" ]
		},
		"data/items/complex/Color.ts": {
			"classes": [ "Color" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Complex.ts", "data/items/simple/Number.ts" ]
		},
		"data/items/complex/Euler.ts": {
			"classes": [ "Euler" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Complex.ts", "data/items/simple/String.ts", "data/items/measures/Angle.ts" ]
		},
		"data/items/simple/String.ts": {
			"classes": [ "String" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Simple.ts" ]
		},
		"data/items/Measure.ts": {
			"classes": [ "Measure", "MeasurementUnit" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/simple/Number.ts" ]
		},
		"data/items/measures/Angle.ts": {
			"classes": [ "Angle" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Measure.ts" ]
		},
		"data/items/complex/Quaternion.ts": {
			"classes": [ "Quaternion" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Complex.ts", "data/items/simple/Number.ts" ]
		},
		"data/items/complex/Vector.ts": {
			"classes": [ "Vector" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Complex.ts", "data/items/measures/Distance.ts" ]
		},
		"data/items/measures/Distance.ts": {
			"classes": [ "Distance" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Measure.ts" ]
		},
		"data/items/measures/Size.ts": {
			"classes": [ "Size" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Measure.ts" ]
		},
		"data/items/measures/Time.ts": {
			"classes": [ "Time" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Measure.ts" ]
		},
		"data/items/Shape.ts": {
			"classes": [ "Shape" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/simple/String.ts" ]
		},
		"data/items/shapes/Box.ts": {
			"classes": [ "Box" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Shape.ts", "data/items/measures/Size.ts" ]
		},
		"data/items/shapes/Ellipsoid.ts": {
			"classes": [ "Ellipsoid" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Shape.ts", "data/items/measures/Size.ts" ]
		},
		"data/items/shapes/Sphere.ts": {
			"classes": [ "Sphere" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Shape.ts", "data/items/measures/Size.ts" ]
		},
		"data/items/simple/Boolean.ts": {
			"classes": [ "Boolean" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Simple.ts" ]
		},
		"data/model/Extension.ts": {
			"classes": [ "Extension" ],
			"links": [ "data/Item.ts", "data/Type.ts" ]
		},
		"data/model/Frame.ts": {
			"classes": [ "Frame" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/Shape.ts" ]
		},
		"data/model/frames/GeoFrame.ts": {
			"classes": [ "GeoFrame" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/model/Frame.ts", "data/items/measures/Distance.ts", "data/items/simple/Number.ts" ]
		},
		"data/model/GeoPose.ts": {
			"classes": [ "GeoPose" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/collections/List.ts", "data/model/frames/GeoFrame.ts", "data/model/Extension.ts" ]
		},
		"data/model/geoposes/GeoPoseBasicQuaternion.ts": {
			"classes": [ "GeoPoseBasicQuaternion" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/model/GeoPose.ts", "data/model/positions/GeoPosition.ts", "data/model/orientations/QuaternionOrientation.ts" ]
		},
		"data/model/Position.ts": {
			"classes": [ "Position" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/complex/Vector.ts" ]
		},
		"data/model/positions/GeoPosition.ts": {
			"classes": [ "GeoPosition" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/model/Position.ts", "data/items/measures/Angle.ts", "data/items/measures/Distance.ts" ]
		},
		"data/model/Orientation.ts": {
			"classes": [ "Orientation" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/complex/Quaternion.ts" ]
		},
		"data/model/orientations/QuaternionOrientation.ts": {
			"classes": [ "QuaternionOrientation" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/model/Orientation.ts", "data/items/simple/Number.ts" ]
		},
		"data/model/geoposes/GeoPoseBasicYPR.ts": {
			"classes": [ "GeoPoseBasicYPR" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/model/GeoPose.ts", "data/model/positions/GeoPosition.ts", "data/model/orientations/YawPitchRollOrientation.ts" ]
		},
		"data/model/orientations/YawPitchRollOrientation.ts": {
			"classes": [ "YawPitchRollOrientation" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/model/Orientation.ts", "data/items/measures/Angle.ts" ]
		},
		"data/model/orientations/LookAtOrientation.ts": {
			"classes": [ "LookAtOrientation" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/model/Orientation.ts", "data/items/simple/String.ts", "data/items/complex/Vector.ts" ]
		},
		"data/model/Pose.ts": {
			"classes": [ "Pose" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/Collection.ts", "data/model/Frame.ts", "data/model/Position.ts", "data/model/Orientation.ts", "data/model/Extension.ts", "data/collections/List.ts" ]
		},
		"data/model/positions/EuclideanPosition.ts": {
			"classes": [ "EuclideanPosition" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/model/Position.ts", "data/items/measures/Distance.ts" ]
		},
		"data/model/positions/OrbitalPosition.ts": {
			"classes": [ "OrbitalPosition" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/model/Position.ts" ]
		},
		"user/interaction/Space.ts": {
			"classes": [ "Space" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/collections/List.ts", "logic/entities/SpaceEntity.ts", "user/interaction/Presence.ts", "user/interaction/Widget.ts" ]
		},
		"logic/Entity.ts": {
			"classes": [ "Entity" ],
			"links": [ "logic/three.ts", "data/Item.ts", "data/Type.ts", "data/model/Pose.ts" ]
		},
		"logic/entities/SpaceEntity.ts": {
			"classes": [ "SpaceEntity" ],
			"links": [ "logic/entities/three.ts", "data/Item.ts", "data/Type.ts", "logic/Entity.ts" ]
		},
		"user/interaction/Presence.ts": {
			"classes": [ "Presence" ],
			"links": [ "data/Item.ts", "data/Type.ts", "logic/entities/PresenceEntity.ts", "user/interaction/Space.ts" ]
		},
		"logic/entities/PresenceEntity.ts": {
			"classes": [ "PresenceEntity" ],
			"links": [ "logic/entities/three.ts", "data/Item.ts", "data/Type.ts", "logic/Entity.ts", "data/items/simple/Number.ts" ]
		},
		"user/interaction/Widget.ts": {
			"classes": [ "Widget" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/collections/List.ts", "logic/Entity.ts", "user/interaction/Component.ts", "user/interaction/Space.ts" ]
		},
		"user/interaction/Component.ts": {
			"classes": [ "Component" ],
			"links": [ "data/Item.ts", "data/Type.ts", "logic/Entity.ts", "user/interaction/Widget.ts" ]
		},
		"user/User.ts": {
			"classes": [ "User" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/collections/List.ts", "user/interaction/Presence.ts", "user/interaction/View.ts" ]
		},
		"user/interaction/View.ts": {
			"classes": [ "View" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/items/simple/Number.ts", "data/items/simple/String.ts", "data/collections/List.ts", "user/interaction/Layer.ts", "user/User.ts", "logic/ViewPort.ts" ]
		},
		"user/interaction/Layer.ts": {
			"classes": [ "Layer" ],
			"links": [ "data/Item.ts", "data/Type.ts", "data/collections/List.ts", "user/interaction/Presence.ts", "user/interaction/Space.ts", "user/interaction/Widget.ts", "logic/Entity.ts" ]
		},
		"logic/ViewPort.ts": {
			"classes": [ "ViewPort" ],
			"links": [ "logic/three.ts", "user/interaction/Presence.ts" ]
		},
		"logic/Behavior.ts": {
			"classes": [ "Behavior" ],
			"links": [ "data/Item.ts", "data/Type.ts" ]
		},
		"logic/entities/ShapeEntity.ts": {
			"classes": [ "ShapeEntity" ],
			"links": [ "logic/entities/three.ts", "data/Item.ts", "data/Type.ts", "logic/Entity.ts" ]
		},
		"logic/entities/TerrainEntity.ts": {
			"classes": [ "TerrainEntity" ],
			"links": [ "logic/entities/three.ts", "data/Item.ts", "data/Type.ts", "logic/Entity.ts", "data/items/shapes/Ellipsoid.ts", "data/items/simple/String.ts" ]
		},
		"user/interaction/components/PlanetComponent.ts": {
			"classes": [ "PlanetComponent" ],
			"links": [ "data/Item.ts", "data/Type.ts", "user/interaction/Component.ts", "logic/entities/TerrainEntity.ts", "data/items/shapes/Ellipsoid.ts" ]
		},
		"user/interaction/components/ShapeComponent.ts": {
			"classes": [ "ShapeComponent" ],
			"links": [ "data/Item.ts", "data/Type.ts", "user/interaction/Component.ts", "logic/entities/ShapeEntity.ts", "data/items/Shape.ts" ]
		},
		"user/interaction/widgets/PlanetWidget.ts": {
			"classes": [ "PlanetWidget" ],
			"links": [ "data/Item.ts", "data/Type.ts", "user/interaction/Widget.ts", "user/interaction/components/PlanetComponent.ts" ]
		}
	}
}